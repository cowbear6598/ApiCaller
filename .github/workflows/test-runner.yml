name: Unity Git Package CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
    
      - name: Cache Library folder
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Run EditMode tests
        uses: game-ci/unity-test-runner@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ github.workspace }}/Assets/ApiCaller
          testMode: EditMode
          artifactsPath: ${{ github.workspace }}/artifacts/editmode

      - name: Run PlayMode tests
        uses: game-ci/unity-test-runner@v3
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ github.workspace }}/Assets/ApiCaller
          testMode: PlayMode
          artifactsPath: ${{ github.workspace }}/artifacts/playmode

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results
          path: ${{ github.workspace }}/artifacts

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Run dotnet format
        run: dotnet format ${{ github.workspace }}/Assets/ApiCaller --verify-no-changes